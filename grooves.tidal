setcps (125/60/2)

-- groove 1

d1 $ stack [
    s "co*2" # n "0 1" # gain 0.7
    , degrade $ s "dr*8" # n (irand 30) # cut 5 # gain 0.5 # pan tri
    , s "clubkick*2" # gain 0.9
    , s "~ electrso1" # n 11 # gain 1.1 # speed 1.1
]

-- groove 2

setcps (118/60/2)

d1 $ stack [
    loopAt 2
        $ s "breaks165"
        # cut 1 
        # krush 4
        # gain 0.6
        # speed 1
    , struct "00010010"
    $ s "gretsch"
        # n 2
        # cut 4
        # krush 2
    , fast 2
        $ s "~ 808:4"
        # gain 1
        # speed 1.2    
    , s "house*2"
]


-- funky

setcps (90/60/2)

d1 $ swingBy (0.18) 4 $ stack [
    struct "101?<1001>000<0001>" $ someCycles (palindrome) $ s "gretsch" # n 13
    , sometimesBy 0.01 ( (# n 17) . (# legato 2) ) $ s "gretsch*8" # n "<5 5 5 [5 6]>" # gain "1 0.9 1 0.95" |-| gain 0.2 # cut 2
    , sometimesBy 0.3 (stut 4 0.5 0.125) $ s "~ gretsch" # n 22
]

-- hiphop version

setcps (90/60/2)

d1 $ swingBy (0.05) 4 $ stack [
    struct "101?<1001>000<0001>" $ someCycles (palindrome) $ s "hh" # n 5
    , sometimesBy 0.01 ( (# n 7) . (# legato 2) ) $ s "hh*8" # n "<0 0 0 [0 [8 7]]>" # gain "1 0.9 1 0.95" |-| gain 0.2 # cut 2
    , s "~ hh" # n 11
] # krush 4


-- hiphop beat, inspired by https://www.youtube.com/watch?v=lZ8zu1aRYA8

setcps (82/60/2)

d1 $ stack [
    struct "1 <0 0 0 1> 0 [0 0 1]" $ s "gretsch:13"
    , s "~ ifdrums" # n 2 # gain 0.9 # legato 0.3
    , s "~ hh27?" # n 7 # legato 0.4
    , (0.01 ~>) $ swingBy (0.08) 2 $ s "hc*4" # n 1 # gain 0.7
    , loopAt 2 $ s "breaks165" # cut 7 # bpf 900 # gain 0.7
] # krush 1


-- trap

setcps (68/60/2)

d1 $ stack [
     struct "1 0 [11]? 0 0 0 0 [0 1?]" $ s "808bd" # n 1 # krush 4 # cut 1 # note "<0 0 0 <0 12>>"
    , s "~ 808sd" # n 19
    , s "~ 808" # n 3 # crush 4
    , sometimesBy 0.1 (fast 2) $ every 13 ((fast 2) . (# speed (range 0.5 1.5 sine))) $ s "808*8" # n 1 # room 0.05 # orbit 2
] # krush 1


-- 

setcps (98/60/2)

d1 $ stack [
    struct (slowcat ["10110101", "0000000<1 1 1 [01]>"]) $ s "dr2:3" # gain 1.1
    , s "~ dr2:1" # crush 8
    , every (slow 2 $ "<0 1>") (# n (fast 2 $ "0 0 4 ~")) $ fast 8 $ s "dr2" # gain 0.7 # cut 3 # pan 0.6
    , slow 4 $ s "dr2:2" # pan 0.4 # gain 0.8
    , slow 4 $ every 4 (# gain 0.8) $ fast 4 $ sometimesBy 0.2 ( (stut 3 0.7 0.0625) . (0.25 <~) ) $ struct (binary(75)) $ s "dr2:5" # gain 0
]


---

setcps (110/60/2)

d1 $ stack [
    s "tabla" # n 2 # cut 1
    , degrade $ s "tabla*8" # n (choose[9, 10, 11, 12, 13]) # pan sine
    , s "tabla(3,8)" # n "<18 18 25 25>" # pan 0.75 # gain 0.9
    , ("<0.25 0.25 0.75>" ~>) $ s "tabla(3,8)" # n 6 # pan 0.25 # cut 2 # bpf (slow 8 $ range 500 4500 sine)
]

--- odd hiphop

setcps (90/60/2)

d1 $ stack [
    struct "1010<0@7 [01]>" $ s "hh" # n 6
    , struct (cat ["00010", "0001<1@3 [11]>"]) $ s "hh" # 11 # cut 2
    , slow "<2@8 1@8>" $ swingBy (0.05) 2 $ s "hh*5" # n "0 <0@3 7> 0 0 0" # cut 3 # gain "0.8 0.9 0.8 1 0.8"
    , slow 16 $ s "hh:1" # gain 0.9 # pan 0.8
    , slow 2 $ s "<hh:9 hh:8>" # pan "<0 1>" # gain 0.7
]

-- break

setcps(170/60/4)


d1 $ stack [
    loopAt 1
        $ someCyclesBy 0.3 ( (slow 2) . (stut' 4 0.0625 (|*| speed 1.2)) ) 
        $ slice 8 "0 .. 7"
        $ s "breaks165"
        # cut 1 
        # gain 1
]


-- 

setcps(132/60/4)

d1 $ stack [
    loopAt 2
      $ palindrome 
      $ slice 8 "2 2 4 <[44] 4> 5 6 0 <1 [11]>"
      $ s "alex" # gain 0.9
      , s "~ cp ~ ~ ~ ~ cp ~"
      , s "bin(3,8,<2 3>)" # pan 0.25
      , slow 4 $ stut' 5 0.24 (|*| gain 0.9) $ s "~ ~ ~ can" # pan 0.8 # n (irand 13) # cut 4
      , slow 8 $ s "~ ~ ~ ~ ~ ~ ~ ~ [~ d:3*8]" # cut 5 # speed 2 # pan sine
      , slow 4 $ struct (ascii("yolo")) $ s "dr:1" # bpf 400
      , slow 8 $ s "cr" # gain 0.8 # pan 0.55
      , fast 2 $ s "electro1(3,8)" # n 9 # pan (slow 2 $ tri) # crush 8 # room 0.25 # orbit 3 # gain "<0@8 1.2@4>"
]
